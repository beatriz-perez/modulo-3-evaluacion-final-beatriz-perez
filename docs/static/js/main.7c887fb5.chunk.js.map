{"version":3,"sources":["images/Rick_and_Morty_logo.png","components/LayoutComponents/Header.js","components/LayoutComponents/Section.js","components/LayoutComponents/Footer.js","components/InfoText.js","components/FormComponents/TextInput.js","components/FormComponents/RadioInput.js","components/FormComponents/CheckboxInput.js","components/FormComponents/SelectInput.js","components/Filters.js","components/Card.js","components/CardList.js","components/DetailNavigation.js","components/Detail.js","components/App.js","services/APIservice.js","index.js"],"names":["module","exports","Header","className","id","role","to","src","Rick_and_Morty_logo","alt","this","props","title","React","Component","defaultProps","Section","children","Footer","href","target","rel","InfoText","handleClick","bind","task","Fragment","onClick","info","TextInput","handleChange","event","currentTarget","name","value","labelText","sampleText","htmlFor","type","placeholder","onChange","RadioInput","checkValue","checked","CheckboxInput","SelectInput","Filters","preventSubmit","preventDefault","textFilter","speciesFilter","order","orderReverse","statusFilter","onSubmit","Card","statusIcon","image","species","gender","status","speciesIcon","genderIcon","CardList","resultInfoText","apiInfo","infoFilters","filteredArray","filter","item","toLowerCase","includes","sort","a","b","map","index","key","resultsArray","reverse","length","DetailNavigation","parseInt","nextDetail","prevDetail","Detail","match","params","detailInfo","find","toString","planet","origin","episode","created","actLocation","location","App","showIntroText","changeFilters","changeOrder","state","introText","pageInfo","savedState","JSON","parse","localStorage","getItem","setState","fetch","then","response","json","data","results","setItem","stringify","prevState","newInfoFilters","exact","path","render","routerProps","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c887fb5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Rick_and_Morty_logo.75509f2e.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n// Imágenes:\nimport Rick_and_Morty_logo from '../../images/Rick_and_Morty_logo.png';\n\nexport default class Header extends React.Component {\n\n    render() {\n        return (\n            <header className=\"container__page--header\" id=\"header\" role=\"navigation\">\n                <div className=\"container__general\">\n                    <Link to=\"/\" className=\"container__section--header\">\n                        <img src={Rick_and_Morty_logo} alt=\"Rick and Morty Logo\" className=\"header__logo\"/>\n                        <h1 className=\"header__title text__header\">\n                            {this.props.title}\n                        </h1>\n                    </Link>\n                </div>\n            </header>\n        );\n    }\n}\nHeader.defaultProps = {\n    title: 'aplicación react'\n}\nHeader.propTypes = {\n    title: PropTypes.string\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Section extends React.Component {\n\n    render() {\n        return (\n            <section className=\"container__page--section\" id={this.props.id} role={this.props.role}>\n                <div className=\"container__general\">\n                    <div className=\"container__section--section\">\n\n                        {this.props.children}\n                        \n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\nSection.defaultProps = {\n    id: 'centralSection',\n    title: 'sección principal',\n    role: 'main content'\n}\nSection.propTypes = {\n    id: PropTypes.string.isRequired,\n    role: PropTypes.string.isRequired\n}","import React from 'react';\n\nexport default class Footer extends React.Component {\n\n    render() {\n        return (\n            <footer className=\"container__page--footer\" id=\"footer\" role=\"contentinfo\">\n                <div className=\"container__general\">\n                    <div className=\"container__section--footer\">\n\n                        <p className=\"footer__text text__footer\">\n                            code by\n                            <a\n                                className=\"footer__text--link text__footer text__footer--link\"\n                                href=\"https://beatriz-perez.github.io/Index/\"\n                                title=\"go to Beatriz's\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            > Beatriz</a>\n                        </p>\n\n                    </div>\n                </div>\n            </footer>\n        );\n    }\n}","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\nexport default class InfoText extends Component {\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        this.props.task();\n    }\n    \n    render() {\n        return (\n            <React.Fragment>\n            <p className=\"info__title text__title\" onClick={this.handleClick}>\n                <i className={`fas fa-sort-down ${this.props.info === true ? \"up\" : \"down\"}`}></i> info\n            </p>\n            <div className={this.props.info === true ? \"info_box\" : \"hidden\"}>\n            \n                <p className=\"info_paragraph text__info\">\n                    Proyecto desarrollado como examen final del tercer módulo de Adalab.\n                </p>\n                <p className=\"info_paragraph text__info\">\n                    El ejercicio consiste en una página web con un listado de personajes de Rick and Morty, que podemos filtrar por el nombre del personaje empleando React para realizarlo.\n                </p>\n                <p className=\"info_paragraph text__info\">\n                    Además, podemos filtrar los personajes por especie, elegir ver sólo los personajes vivos, seleccionar el criterio por el que se ordenan, o invertir su orden.\n                </p>\n                <p className=\"info_paragraph text__info\">\n                    Al hacer click en la tarjeta de un personaje accederemos a su información en detalle, y podremos navegar entre personajes por orden de ID.\n                </p>\n            </div>\n            </React.Fragment>\n        )\n    }\n}\nInfoText.propTypes = {\n    info: PropTypes.bool.isRequired,\n    task: PropTypes.func.isRequired\n}","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\nexport default class TextInput extends Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n        this.props.task(event.currentTarget.name, event.currentTarget.value);\n    }\n\n    render() {\n        const { name, value, labelText, sampleText } = this.props;\n        return (\n            <div className=\"inputBox\">\n                <label htmlFor={name} className=\"label text__base\">\n                    {labelText}\n                </label>\n                <input\n                        type=\"text\"  \n                        id={name} \n                        name={name} \n                        value={value} \n                        placeholder={sampleText}\n                        onChange={this.handleChange}\n                />  \n            </div>\n        )\n    }\n}\n\nTextInput.propTypes = {\n    name: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    task: PropTypes.func.isRequired,\n    labelText: PropTypes.string.isRequired,\n    sampleText: PropTypes.string\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\nexport default class RadioInput extends Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n        this.props.task(event.currentTarget.name, event.currentTarget.value);\n    }\n\n\n    render() {\n        const { name, value, labelText, checkValue } = this.props;\n        return (\n            <div className=\"inputBox\">\n                <input\n                        type=\"radio\"\n                        name={name}\n                        value={value}\n                        id={value}\n                        checked={checkValue === value ? true : false}\n                        onChange={this.handleChange}\n                />\n                <label htmlFor={value} className=\"label text__base\">\n                    \n                    {labelText}\n                </label>\n            </div>\n        )\n    }\n}\n\nRadioInput.propTypes = {\n    name: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    checkValue: PropTypes.string.isRequired,\n    task: PropTypes.func.isRequired,\n    labelText: PropTypes.string.isRequired\n}","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\nexport default class CheckboxInput extends Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n        this.props.task(event.currentTarget.name, event.currentTarget.checked);\n    }\n\n\n    render() {\n        const { name, checked, labelText, value } = this.props;\n        return (\n            <div className=\"inputBox\">\n                <input\n                        type=\"checkbox\"\n                        id={name} \n                        name={name}\n                        value={value}\n                        checked={checked}\n                        onChange={this.handleChange}\n                />\n                <label htmlFor={name} className=\"label text__base\">\n                    \n                    {labelText}\n                </label>\n            </div>\n        )\n    }\n}\n\nCheckboxInput.propTypes = {\n    name: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    checked: PropTypes.bool.isRequired,\n    task: PropTypes.func.isRequired,\n    labelText: PropTypes.string.isRequired\n}","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\nexport default class SelectInput extends Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n        this.props.task(event.currentTarget.id, event.currentTarget.value);\n    }\n\n    render() {\n        const { name, value, labelText } = this.props;\n        return (\n            <div className=\"inputBox\">\n                <label htmlFor={name} className=\"label text__base\">\n                    {labelText}\n                </label>\n                <select id={name} value={value} onChange={this.handleChange}>\n                    <option value=\"All\">todas</option>\n                    <option value=\"Human\">humana</option>\n                    <option value=\"Alien\">alien</option>\n                </select>\n            </div>\n        )\n    }\n}\n\nSelectInput.propTypes = {\n    name: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    task: PropTypes.func.isRequired,\n    labelText: PropTypes.string.isRequired,\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Componentes:\nimport TextInput from './FormComponents/TextInput';\nimport RadioImput from './FormComponents/RadioInput';\nimport CheckboxInput from './FormComponents/CheckboxInput';\nimport SelectInput from './FormComponents/SelectInput';\n\nexport default class Filters extends Component {\n    constructor(props) {\n        super(props);\n        this.preventSubmit = this.preventSubmit.bind(this);\n    }\n\n    preventSubmit(event) {\n        event.preventDefault();\n    }\n\n    render() {\n        const { info:{ textFilter, speciesFilter, order, orderReverse, statusFilter} , task } = this.props;\n\n        return (\n            <form className=\"firltersBox\" onSubmit={this.preventSubmit}>\n                <div className=\"firltersBox__set\">\n                    <p className=\"legend text__base text__base--bold\">filtrar por:</p>\n                    <TextInput\n                        name=\"textFilter\" \n                        value={textFilter} \n                        task={task} \n                        labelText=\"nombre\"\n                        sampleText=\"rick\"\n                    />\n                    <SelectInput\n                        name=\"speciesFilter\" \n                        value={speciesFilter} \n                        task={task} \n                        labelText=\"especie\"\n                    />\n                </div>\n                <div className=\"firltersBox__set\">\n                    <p className=\"legend text__base text__base--bold\">ver solo:</p>\n                    <CheckboxInput\n                        name=\"statusFilter\"\n                        value=\"Alive\"\n                        checked={statusFilter}\n                        task={task} \n                        labelText=\"vivos\" \n                    />\n                </div>\n                <div className=\"firltersBox__set\">\n                    <p className=\"legend text__base text__base--bold\">ordenar por:</p>\n                    <RadioImput\n                        name=\"order\" \n                        value=\"name\"\n                        checkValue={order} \n                        task={task} \n                        labelText=\"nombre\"\n                    />\n                    <RadioImput\n                        name=\"order\" \n                        value=\"id\"\n                        checkValue={order} \n                        task={task} \n                        labelText=\"id\"\n                    />\n                    <CheckboxInput\n                        name=\"orderReverse\"\n                        value=\"reverse\"\n                        checked={orderReverse}\n                        task={task} \n                        labelText=\"invertir\" \n                    />\n                </div>\n\n            </form> \n        )\n    }\n}\n\nFilters.propTypes = {\n    info: PropTypes.object.isRequired,\n    task: PropTypes.func.isRequired\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\n\nexport default class Card extends Component {\n    render() {\n\n        const { id, image, name, species, gender, status } = this.props.info;\n        const speciesIcon =\n            species === \"Human\"\n                ? <i className=\"fas fa-male card__infobox--icon\"></i>\n                : <i className=\"fas fa-pastafarianism card__infobox--icon\"></i>;\n        const genderIcon =\n            gender === \"Male\"\n                ? <i className=\"fas fa-mars card__infobox--icon\"></i>\n                : <i className=\"fas fa-venus card__infobox--icon\"></i>;\n        let statusIcon;\n        switch (status) {\n            case \"Alive\":\n                statusIcon = <i className=\"fas fa-user-alt card__infobox--icon\"></i>\n                break;\n            case \"Dead\":\n                statusIcon = <i className=\"fas fa-user-alt-slash card__infobox--icon\"></i>\n                break;\n            default:\n                statusIcon = <i className=\"fas fa-question card__infobox--icon\"></i>\n        }\n\n        return (\n            <div className=\"card\">\n                <img src={image} alt={name} className=\"card__image\" />\n                <p className=\"card__text text__card text__card--title\">\n                    {name}\n                </p>\n                <div className=\"card__infobox\">\n                    <div className=\"card__infobox--info\">\n                        <p className=\"text__card text__card--bold\">id</p>\n                        <p className=\"card__infobox--id\">{id}</p>\n                    </div>\n                    <div className=\"card__infobox--info\">\n                        <p className=\"text__card text__card--bold\">species</p>\n                        {speciesIcon}\n                        <p className=\"text__card\">{species}</p>\n                    </div>\n                    <div className=\"card__infobox--info\">\n                        <p className=\"text__card text__card--bold\">gender</p>\n                        {genderIcon}\n                        <p className=\"text__card\">{gender}</p>\n                    </div>\n                    <div className=\"card__infobox--info\">\n                        <p className=\"text__card text__card--bold\">status</p>\n                        {statusIcon}\n                        <p className=\"text__card\">{status}</p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nCard.propTypes = {\n    info: PropTypes.object.isRequired\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n// Componentes:\nimport Card from './Card';\n\nexport default class CardList extends Component {\n    render() {\n\n        const generateJSX = (item, index) => {\n            return (\n                <li key={index} className=\"listElement\">\n                    <Link to={`/detail/${item.id}`}>\n                        <Card info={item} />\n                    </Link>\n                </li>\n            )\n        };\n        \n        const { apiInfo, infoFilters:{ textFilter, speciesFilter, order, orderReverse, statusFilter } } = this.props.info;\n        const filteredArray = apiInfo\n            .filter(item => textFilter === \"\" || item.name.toLowerCase().includes(textFilter.toLowerCase()))\n            .filter(item => speciesFilter === \"All\" || item.species === speciesFilter)\n            .filter(item => statusFilter === false || item.status === \"Alive\")\n            .sort((a, b) => {\n                if (a[order] > b[order]) { return 1; }\n                if (a[order] < b[order]) { return -1; }\n                else { return 0; }\n            })\n            .map(generateJSX);\n        const resultsArray = orderReverse === false ? filteredArray : filteredArray.reverse();\n\n        let resultInfoText;\n        switch (resultsArray.length) {\n            case 0:\n                resultInfoText = \n                `¡RAYOS! Parece que no hay ningún personaje que coincida con tu búsqueda \"${textFilter}\".`\n                break;\n            case 1:\n                resultInfoText = \"Hay un único resultado para tu búsqueda:\"\n                break;\n            default:\n                resultInfoText = `Hay ${resultsArray.length} resultados para tu búsqueda:`\n        }\n\n        return (\n            <React.Fragment>\n                <p className=\"resultsInfo text__base\">{resultInfoText}</p>\n                <ul className=\"cardList\">\n                    {resultsArray}\n                </ul>\n            </React.Fragment>\n        )\n    }\n}\n\nCardList.propTypes = {\n    info: PropTypes.object.isRequired\n}","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport default class DetailNavigation extends Component {\n    render() {\n        \n        const {info} = this.props;\n        const id = parseInt(info);\n        const nextDetail = id + 1;\n        const prevDetail = id - 1;\n        \n        if (id === 1) {\n            return (\n                <div className=\"navBox\">\n                    <div className=\"button__base button__base--off text__base\"><i className=\"fas fa-times\"></i></div>\n                    <Link className=\"button__base text__base\" to=\"/\">ver listado</Link>\n                    <Link className=\"button__base text__base\" to={`/detail/${nextDetail}`}>\n                        <i className=\"fas fa-arrow-right\"></i>\n                    </Link>\n                </div>\n            )\n        } else if (typeof(id) === 'number' && id > 1 && id < 20) {\n            return (\n                <div className=\"navBox\">\n                    <Link className=\"button__base text__base\" to={`/detail/${prevDetail}`}>\n                        <i className=\"fas fa-arrow-left\"></i>\n                    </Link>\n                    <Link className=\"button__base text__base\" to=\"/\">ver listado</Link>\n                    <Link className=\"button__base text__base\" to={`/detail/${nextDetail}`}>\n                        <i className=\"fas fa-arrow-right\"></i>\n                    </Link>\n                </div>\n            )\n        } else if (id === 20) {\n            return (\n                <div className=\"navBox\">\n                    <Link className=\"button__base text__base\" to={`/detail/${prevDetail}`}>\n                        <i className=\"fas fa-arrow-left\"></i>\n                    </Link>\n                    <Link className=\"button__base text__base\" to=\"/\">ver listado</Link>\n                    <div className=\"button__base button__base--off text__base\"><i className=\"fas fa-times\"></i></div>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"navBox\">\n                    <Link className=\"button__base text__base\" to=\"/\">ver listado</Link>\n                </div>\n            )\n        }\n\n    }\n}\nDetailNavigation.propTypes = {\n    info: PropTypes.string.isRequired\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n//Componentes:\nimport DetailNavigation from './DetailNavigation';\n\nexport default class Detail extends Component {\n    render() {\n        const { match:{params:{id}}, info } = this.props;\n        let detailInfo = info.length === 0 ? null : info.find(item => item.id.toString() === id);\n\n        if(!detailInfo) {\n            return (\n                <div className=\"detail__cardContainer\">\n                    <p className=\"detail__alertText text__base\">\n                        ¡RAYOS! No hay información... parece que el personaje que buscas no existe!\n                    </p>\n                    <DetailNavigation info={id}/>\n                </div>\n            )\n        } else {\n            const { \n                image, \n                name, \n                species, \n                gender, \n                origin:{ name:planet }, \n                episode, \n                status,\n\n                created,\n                location:{name:actLocation}\n            } = detailInfo;\n\n            return (\n                <div className=\"detail__cardContainer\">\n                    <div className=\"detail__card\">\n\n                        <img src={image} alt={name} className=\"detail__card--image\"/>\n\n                        <div className=\"detail__card--texts\">\n                            <p className=\"detail__card--name text__title\">\n                                {name}\n                            </p>\n                            <p className=\"text text__base\">\n                                <span className=\"text__title\">especie: </span>{species}\n                            </p>\n                            <p className=\" text text__base\">\n                                <span className=\"text__title\">género: </span>{gender}\n                            </p>\n                            <p className=\"text text__base\">\n                                <span className=\"text__title\">planeta de origen: </span>{planet}\n                            </p>\n                            <p className=\"text text__base\">\n                                <span className=\"text__title\">episodios en los que aparece: </span>{episode.length}\n                            </p>\n                            <p className=\"text text__base\">\n                                <span className=\"text__title\">estado: </span>{status}\n                            </p>\n                            <p className=\"text text__base\">\n                                <span className=\"text__title\">fue creado en: </span>{created}\n                            </p>\n                            <p className=\"text text__base\">\n                                <span className=\"text__title\">localización actual: </span>{actLocation}\n                            </p>\n\n                        </div>\n\n                    </div>\n                    <DetailNavigation info={id}/>\n                </div>\n            )\n        }\n    }\n}\n\nDetail.propTypes = {\n    info: PropTypes.array.isRequired,\n    match: PropTypes.object.isRequired\n}\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\n//Estilos:\nimport '../stylesheets/App.scss';\n\n//Servicios:\nimport { fetchApiInfo } from '../services/APIservice';\n\n// Componentes:\nimport Header from './LayoutComponents/Header';\nimport Section from './LayoutComponents/Section';\nimport Footer from './LayoutComponents/Footer';\nimport InfoText from './InfoText';\nimport Filters from './Filters';\nimport CardList from './CardList';\nimport Detail from './Detail';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.showIntroText = this.showIntroText.bind(this);\n    this.changeFilters = this.changeFilters.bind(this);\n    this.changeOrder = this.changeFilters.bind(this);\n    this.state = {\n      introText: false,\n      pageInfo: {},\n      apiInfo: [],\n      infoFilters: {\n        textFilter: \"\",\n        speciesFilter: \"All\",\n        statusFilter: false,\n        order: \"id\",\n        orderReverse: false\n      }\n    }\n  } \n  componentDidMount() {\n    const savedState = JSON.parse(localStorage.getItem('localinfo'));\n    if(!savedState) {\n      fetchApiInfo() \n      .then(data => {\n        this.setState({\n          apiInfo: data.results,\n          pageInfo: data.info\n        })\n      });\n    } else {\n      this.setState(savedState);\n    }\n  }\n  componentDidUpdate() {\n    localStorage.setItem('localinfo', JSON.stringify(this.state));\n  };\n\n  showIntroText() {\n    this.setState(prevState => ({\n      introText: !prevState.introText\n    }));\n  }\n\n  changeFilters(name, value) {\n    const newInfoFilters = this.state.infoFilters;\n    newInfoFilters[name] = value;\n    this.setState({ infoFilters: newInfoFilters })\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header title=\"buscador de personajes\" />\n\n        <Section id=\"centralSection\" role=\"main content\">\n          <Switch>\n\n            <Route exact path=\"/\">\n              <InfoText info={this.state.introText} task={this.showIntroText}/>\n              <Filters info={this.state.infoFilters} task={this.changeFilters}/>\n              <CardList info={this.state}/>\n            </Route>\n\n            <Route \n              path=\"/detail/:id\"\n              render={routerProps => <Detail match={routerProps.match} info={this.state.apiInfo}/>} \n            />\n\n          </Switch>\n        </Section>\n\n        <Footer />\n      </div>\n    );\n  }\n}","const ENDPOINT = 'https://rickandmortyapi.com/api/character/';\n\nconst fetchApiInfo = () => fetch(ENDPOINT).then(response => response.json());\n\nexport { fetchApiInfo };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\n//Estilos:\nimport './stylesheets/index.scss';\n\n// Componentes:\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}